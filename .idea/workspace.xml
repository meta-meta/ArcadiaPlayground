<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="e5fcc031-efa8-4017-a5f6-6119c991dc38" name="Default" comment="">
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Assets/arcadia.nrepl" afterPath="$PROJECT_DIR$/Assets/arcadia.nrepl" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/.idea/workspace.xml" afterPath="$PROJECT_DIR$/.idea/workspace.xml" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Assets/2018-6-24-purple-room-VR.unity" afterPath="$PROJECT_DIR$/Assets/2018-6-24-purple-room-VR.unity" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Assets/Resources/black-keys.mat" afterPath="$PROJECT_DIR$/Assets/Resources/black-keys.mat" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Assets/music_instrument_state.clj" afterPath="$PROJECT_DIR$/Assets/music_instrument_state.clj" />
      <change type="MODIFICATION" beforePath="$PROJECT_DIR$/Assets/studio.clj" afterPath="$PROJECT_DIR$/Assets/studio.clj" />
    </list>
    <list id="683ade52-2a0d-4562-9c79-69c2ad9da45a" name="New changelist" comment="" />
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="ChangesViewManager" flattened_view="true" show_ignored="false" />
  <component name="CreatePatchCommitExecutor">
    <option name="PATCH_PATH" value="" />
  </component>
  <component name="DatabaseView">
    <option name="SHOW_INTERMEDIATE" value="true" />
    <option name="GROUP_SCHEMA" value="true" />
    <option name="GROUP_CONTENTS" value="false" />
    <option name="SORT_POSITIONED" value="false" />
    <option name="SHOW_TABLE_DETAILS" value="true" />
    <option name="SHOW_EMPTY_GROUPS" value="false" />
    <option name="AUTO_SCROLL_FROM_SOURCE" value="false" />
    <expand />
    <select />
  </component>
  <component name="ExecutionTargetManager" SELECTED_TARGET="default_target" />
  <component name="FavoritesManager">
    <favorites_list name="ArcadiaPlayground" />
  </component>
  <component name="FileEditorManager">
    <splitter split-orientation="vertical" split-proportion="0.54714286">
      <split-first>
        <leaf>
          <file leaf-file-name="studio.clj" pinned="false" current-in-tab="true">
            <entry file="file://$PROJECT_DIR$/Assets/studio.clj">
              <provider selected="true" editor-type-id="text-editor">
                <state relative-caret-position="500">
                  <caret line="20" column="42" selection-start-line="20" selection-start-column="42" selection-end-line="20" selection-end-column="42" />
                  <folding />
                </state>
              </provider>
            </entry>
          </file>
        </leaf>
      </split-first>
      <split-second>
        <leaf>
          <file leaf-file-name="music_instrument_state.clj" pinned="false" current-in-tab="true">
            <entry file="file://$PROJECT_DIR$/Assets/music_instrument_state.clj">
              <provider selected="true" editor-type-id="text-editor">
                <state relative-caret-position="25">
                  <caret line="16" column="29" selection-start-line="16" selection-start-column="29" selection-end-line="16" selection-end-column="29" />
                  <folding />
                </state>
              </provider>
            </entry>
          </file>
        </leaf>
      </split-second>
    </splitter>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>injec</find>
      <find>polygon-uvs</find>
      <find>make-dodecahedron</find>
      <find>:fn</find>
      <find>Mathf</find>
      <find>import</find>
      <find>diatonic-scale</find>
      <find>defn gobj</find>
      <find>gobj</find>
      <find>gameObject</find>
      <find>set!</find>
      <find>:note</find>
      <find>:acc</find>
      <find>:pc</find>
      <find>:key-signature</find>
      <find>hash</find>
      <find>assoc</find>
      <find>apply has</find>
      <find>clef</find>
      <find>+note</find>
      <find>set-notes!</find>
      <find>s</find>
      <find>game-object-bin</find>
      <find>GameObject.</find>
      <find>color</find>
      <find>log</find>
      <find>child</find>
      <find>set-keysig!</find>
      <find>GetController</find>
      <find>queue-note</find>
    </findStrings>
    <replaceStrings>
      <replace>:start</replace>
      <replace>category</replace>
    </replaceStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GradleLocalSettings">
    <option name="modificationStamps">
      <map>
        <entry key="D:/GradleTesting/OculusRiftSandbox" value="25592081990678" />
        <entry key="D:/GradleTesting/p5-Helpers" value="4263985918322" />
        <entry key="D:/GradleTesting/p5-Rift" value="9949332677483" />
        <entry key="D:/GradleTesting/p5-Spatial" value="7106659788834" />
        <entry key="D:/GradleTesting/p5Test - Copy" value="4265374749593" />
        <entry key="D:/_Testing/GradleTesting/ClojureTest" value="4284523109949" />
        <entry key="D:/_Testing/GradleTesting/PS3Eye" value="4283686922722" />
        <entry key="D:/_Testing/GradleTesting/ProcessingVanillaTest" value="4283531799719" />
        <entry key="D:/_Testing/GradleTesting/p5-rift-repl" value="28482719123389" />
      </map>
    </option>
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/Assets/configuration.edn" />
        <option value="$PROJECT_DIR$/Assets/arcadia_test.clj" />
        <option value="$PROJECT_DIR$/Assets/arcadia.nrepl/arcadia.nrepl.iml" />
        <option value="$PROJECT_DIR$/Assets/ArcadiaWorksheet.clj" />
        <option value="$PROJECT_DIR$/Assets/geometry.clj" />
        <option value="$APPLICATION_CONFIG_DIR$/scratches/scratch.txt" />
        <option value="$PROJECT_DIR$/Assets/musical_notation.clj" />
        <option value="$PROJECT_DIR$/Assets/music_glyphs.clj" />
        <option value="$PROJECT_DIR$/Assets/scheduler.clj" />
        <option value="$PROJECT_DIR$/Assets/music_live_compose.clj" />
        <option value="$PROJECT_DIR$/Assets/arcadia.nrepl/.nrepl-port" />
        <option value="$PROJECT_DIR$/Assets/music_sight_reading.clj" />
        <option value="$PROJECT_DIR$/Assets/Oculus/VR/Scripts/OVRHapticsClip.cs" />
        <option value="$PROJECT_DIR$/Assets/haptics.clj" />
        <option value="$PROJECT_DIR$/Assets/theremin.clj" />
        <option value="$PROJECT_DIR$/Assets/monitors.clj" />
        <option value="$PROJECT_DIR$/.gitignore" />
        <option value="$PROJECT_DIR$/.idea/vcs.xml" />
        <option value="$PROJECT_DIR$/Assets/osc.clj" />
        <option value="$PROJECT_DIR$/Assets/arcadia.nrepl/src/arcadia/nrepl.clj" />
        <option value="$PROJECT_DIR$/Assets/music_notation.clj" />
        <option value="$PROJECT_DIR$/Assets/music_instrument_state.clj" />
        <option value="$PROJECT_DIR$/Assets/studio.clj" />
      </list>
    </option>
  </component>
  <component name="JsBuildToolGruntFileManager" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsBuildToolPackageJson" detection-done="true" sorting="DEFINITION_ORDER" />
  <component name="JsGulpfileManager">
    <detection-done>true</detection-done>
    <sorting>DEFINITION_ORDER</sorting>
  </component>
  <component name="MavenImportPreferences">
    <option name="generalSettings">
      <MavenGeneralSettings>
        <option name="mavenHome" value="Bundled (Maven 3)" />
      </MavenGeneralSettings>
    </option>
  </component>
  <component name="ProjectFrameBounds">
    <option name="width" value="1720" />
    <option name="height" value="1400" />
  </component>
  <component name="ProjectLevelVcsManager" settingsEditedManually="false">
    <OptionsSetting value="true" id="Add" />
    <OptionsSetting value="true" id="Remove" />
    <OptionsSetting value="true" id="Checkout" />
    <OptionsSetting value="true" id="Update" />
    <OptionsSetting value="true" id="Status" />
    <OptionsSetting value="true" id="Edit" />
    <ConfirmationsSetting value="0" id="Add" />
    <ConfirmationsSetting value="0" id="Remove" />
  </component>
  <component name="ProjectView">
    <navigator currentView="ProjectPane" proportions="" version="1">
      <flattenPackages />
      <showMembers />
      <showModules />
      <showLibraryContents />
      <hideEmptyPackages />
      <abbreviatePackageNames />
      <autoscrollToSource />
      <autoscrollFromSource />
      <sortByType />
      <manualOrder />
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scratches" />
      <pane id="ProjectPane">
        <subPane />
      </pane>
      <pane id="PackagesPane" />
      <pane id="Scope">
        <subPane subId="ArcadiaUnity">
          <PATH>
            <PATH_ELEMENT USER_OBJECT="Root">
              <option name="myItemId" value="" />
              <option name="myItemType" value="" />
            </PATH_ELEMENT>
          </PATH>
        </subPane>
        <subPane subId="Project Files">
          <PATH>
            <PATH_ELEMENT USER_OBJECT="Root">
              <option name="myItemId" value="" />
              <option name="myItemType" value="" />
            </PATH_ELEMENT>
          </PATH>
        </subPane>
      </pane>
      <pane id="AndroidView" />
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="GoToClass.includeLibraries" value="false" />
    <property name="GoToClass.toSaveIncludeLibraries" value="false" />
    <property name="GoToFile.includeJavaFiles" value="false" />
    <property name="MemberChooser.sorted" value="false" />
    <property name="MemberChooser.showClasses" value="true" />
    <property name="MemberChooser.copyJavadoc" value="false" />
    <property name="settings.editor.selected.configurable" value="project.scopes" />
    <property name="last_opened_file_path" value="$PROJECT_DIR$" />
    <property name="WebServerToolWindowFactoryState" value="false" />
    <property name="aspect.path.notification.shown" value="true" />
    <property name="cursive.last.file.extension.C\:/Projects/ArcadiaPlayground/Assets" value="clj" />
    <property name="project.structure.last.edited" value="Modules" />
    <property name="project.structure.proportion" value="0.0" />
    <property name="project.structure.side.proportion" value="0.2" />
    <property name="com.intellij.ide.scratch.LRUPopupBuilder$2/Languages" value="TEXT" />
    <property name="SearchEverywhereHistoryKey" value="ovrhaptics&#9;FILE&#9;file://D:/Projects/Unity Projects/ArcadiaPlayground/Assets/Oculus/VR/Scripts/OVRHapticsClip.cs&#10;giti&#9;FILE&#9;file://C:/Projects/ArcadiaPlayground/.gitignore" />
    <property name="settings.editor.splitter.proportion" value="0.2" />
    <property name="cursive.last.file.extension.D\:/Projects/Unity Projects/ArcadiaPlayground/Assets" value="clj" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="D:\Projects\ArcadiaPlayground\Assets" />
      <recent name="D:\Projects\Unity Projects\ArcadiaPlayground\Assets" />
      <recent name="C:\Projects\ArcadiaPlayground\Assets" />
    </key>
  </component>
  <component name="ReplState" timestamp="1538063464901">{:repl-history {:ide [], :local [], :remote [{:command &quot;(def keystation-keys\n  (let [low 21\n        high 108\n        white-notes (notes-in-c-range low high)\n        black-notes (filter #(not (contains? notes-in-c %)) (range low (+ 1 high)))\n        idx-of-middle-c (index-of 60 white-notes)\n        key-width (/ 1.225 (count white-notes))\n\n        white-keys\n        (-&gt;&gt; white-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (key+ keystation-obj                      ;parent\n                        (- index idx-of-middle-c)           ;x-offset\n                        key-width                           ;width\n                        note)]))                            ;note\n             )\n\n        black-keys\n        (-&gt;&gt; black-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  note\n                  (let [go (key+ keystation-obj             ;parent\n                                 (- (index-of (+ note 1) white-notes)\n                                    idx-of-middle-c\n                                    0.5)                    ;x-offset\n                                 key-width                  ;width\n                                 note                       ;note\n                                 )]\n                    (set! (.. go transform localPosition)\n                          (v3 0 (/ key-width 2) (* 3 key-width)))\n                    go)])))\n        ]\n\n    (-&gt;&gt; (concat white-keys black-keys)\n         (flatten)\n         (apply hash-map))\n    ))&quot;, :offset 1528, :ns &quot;studio&quot;} {:command &quot;(let [low 21\n        high 108\n        white-notes (notes-in-c-range low high)\n        black-notes (filter #(not (contains? notes-in-c %)) (range low (+ 1 high)))\n        idx-of-middle-c (index-of 60 white-notes)\n        key-width (/ 1.225 (count white-notes))\n\n        white-keys\n        (-&gt;&gt; white-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (key+ keystation-obj                      ;parent\n                        (- index idx-of-middle-c)           ;x-offset\n                        key-width                           ;width\n                        note)]))                            ;note\n             )\n\n        ;black-keys\n        ;(-&gt;&gt; black-notes\n        ;     (map-indexed\n        ;       (fn [index note]\n        ;         [note\n        ;          (let [go (key+ keystation-obj             ;parent\n        ;                         (- (index-of (+ note 1) white-notes)\n        ;                            idx-of-middle-c\n        ;                            0.5)                    ;x-offset\n        ;                         key-width                  ;width\n        ;                         note                       ;note\n        ;                         )]\n        ;            (set! (.. go transform localPosition)\n        ;                  (v3 0 (/ key-width 2) (* 3 key-width)))\n        ;            go)])))\n        ]\n\n    (-&gt;&gt; black-notes\n         (map-indexed\n           (fn [index note]\n             [note\n              (- (index-of (+ note 1) white-notes)\n                 idx-of-middle-c\n                 0.5)])))\n    \n    #_(-&gt;&gt; (concat white-keys black-keys)\n         (flatten)\n         (apply hash-map))\n    )&quot;, :offset 1703, :ns &quot;studio&quot;} {:command &quot;(let [low 21\n        high 108\n        white-notes (notes-in-c-range low high)\n        black-notes (filter #(not (contains? notes-in-c %)) (range low (+ 1 high)))\n        idx-of-middle-c (index-of 60 white-notes)\n        key-width (/ 1.225 (count white-notes))\n\n        white-keys\n        (-&gt;&gt; white-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (key+ keystation-obj                      ;parent\n                        (- index idx-of-middle-c)           ;x-offset\n                        key-width                           ;width\n                        note)]))                            ;note\n             )\n\n        ;black-keys\n        ;(-&gt;&gt; black-notes\n        ;     (map-indexed\n        ;       (fn [index note]\n        ;         [note\n        ;          (let [go (key+ keystation-obj             ;parent\n        ;                         (- (index-of (+ note 1) white-notes)\n        ;                            idx-of-middle-c\n        ;                            0.5)                    ;x-offset\n        ;                         key-width                  ;width\n        ;                         note                       ;note\n        ;                         )]\n        ;            (set! (.. go transform localPosition)\n        ;                  (v3 0 (/ key-width 2) (* 3 key-width)))\n        ;            go)])))\n        ]\n\n    (-&gt;&gt; black-notes\n         (map-indexed\n           (fn [index note]\n             [note\n              ])))\n    \n    #_(-&gt;&gt; (concat white-keys black-keys)\n         (flatten)\n         (apply hash-map))\n    )&quot;, :offset 1612, :ns &quot;studio&quot;} {:command &quot;(let [low 21\n        high 108\n        white-notes (notes-in-c-range low high)\n        black-notes (filter #(not (contains? notes-in-c %)) (range low (+ 1 high)))\n        idx-of-middle-c (index-of 60 white-notes)\n        key-width (/ 1.225 (count white-notes))\n\n        white-keys\n        (-&gt;&gt; white-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (key+ keystation-obj                      ;parent\n                        (- index idx-of-middle-c)           ;x-offset\n                        key-width                           ;width\n                        note)]))                            ;note\n             )\n\n        ;black-keys\n        ;(-&gt;&gt; black-notes\n        ;     (map-indexed\n        ;       (fn [index note]\n        ;         [note\n        ;          (let [go (key+ keystation-obj             ;parent\n        ;                         (- (index-of (+ note 1) white-notes)\n        ;                            idx-of-middle-c\n        ;                            0.5)                    ;x-offset\n        ;                         key-width                  ;width\n        ;                         note                       ;note\n        ;                         )]\n        ;            (set! (.. go transform localPosition)\n        ;                  (v3 0 (/ key-width 2) (* 3 key-width)))\n        ;            go)])))\n        ]\n\n    (-&gt;&gt; black-notes\n         (map-indexed\n           (fn [index note]\n             [note\n              (index-of (+ note 1) white-notes)\n              \n              ])))\n    \n    #_(-&gt;&gt; (concat white-keys black-keys)\n         (flatten)\n         (apply hash-map))\n    )&quot;, :offset 1675, :ns &quot;studio&quot;} {:command &quot;(let [low 21\n        high 108\n        white-notes (notes-in-c-range low high)\n        black-notes (filter #(not (contains? notes-in-c %)) (range low (+ 1 high)))\n        idx-of-middle-c (index-of 60 white-notes)\n        key-width (/ 1.225 (count white-notes))\n\n        white-keys\n        (-&gt;&gt; white-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (key+ keystation-obj                      ;parent\n                        (- index idx-of-middle-c)           ;x-offset\n                        key-width                           ;width\n                        note)]))                            ;note\n             )\n\n        ;black-keys\n        ;(-&gt;&gt; black-notes\n        ;     (map-indexed\n        ;       (fn [index note]\n        ;         [note\n        ;          (let [go (key+ keystation-obj             ;parent\n        ;                         (- (index-of (+ note 1) white-notes)\n        ;                            idx-of-middle-c\n        ;                            0.5)                    ;x-offset\n        ;                         key-width                  ;width\n        ;                         note                       ;note\n        ;                         )]\n        ;            (set! (.. go transform localPosition)\n        ;                  (v3 0 (/ key-width 2) (* 3 key-width)))\n        ;            go)])))\n        ]\n\n    (-&gt;&gt; black-notes\n         (map-indexed\n           (fn [index note]\n             [note\n              (index-of (+ note 1) white-notes)\n              \n              ])))\n    white-notes\n    \n    #_(-&gt;&gt; (concat white-keys black-keys)\n         (flatten)\n         (apply hash-map))\n    )&quot;, :offset 1691, :ns &quot;studio&quot;} {:command &quot;(let [low 21\n        high 108\n        white-notes (notes-in-c-range low high)\n        black-notes (filter #(not (contains? notes-in-c %)) (range low (+ 1 high)))\n        idx-of-middle-c (index-of 60 white-notes)\n        key-width (/ 1.225 (count white-notes))\n\n        white-keys\n        (-&gt;&gt; white-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (key+ keystation-obj                      ;parent\n                        (- index idx-of-middle-c)           ;x-offset\n                        key-width                           ;width\n                        note)]))                            ;note\n             )\n\n        ;black-keys\n        ;(-&gt;&gt; black-notes\n        ;     (map-indexed\n        ;       (fn [index note]\n        ;         [note\n        ;          (let [go (key+ keystation-obj             ;parent\n        ;                         (- (index-of (+ note 1) white-notes)\n        ;                            idx-of-middle-c\n        ;                            0.5)                    ;x-offset\n        ;                         key-width                  ;width\n        ;                         note                       ;note\n        ;                         )]\n        ;            (set! (.. go transform localPosition)\n        ;                  (v3 0 (/ key-width 2) (* 3 key-width)))\n        ;            go)])))\n        ]\n\n    (-&gt;&gt; black-notes\n         (map-indexed\n           (fn [index note]\n             [note\n              (index-of (+ note 1) white-notes)\n              \n              ])))\n    ;white-notes\n    \n    #_(-&gt;&gt; (concat white-keys black-keys)\n         (flatten)\n         (apply hash-map))\n    )&quot;, :offset 1692, :ns &quot;studio&quot;} {:command &quot;(let [low 21\n        high 108\n        white-notes (notes-in-c-range low high)\n        black-notes (filter #(not (contains? notes-in-c %)) (range low (+ 1 high)))\n        idx-of-middle-c (index-of 60 white-notes)\n        key-width (/ 1.225 (count white-notes))\n\n        white-keys\n        (-&gt;&gt; white-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (key+ keystation-obj                      ;parent\n                        (- index idx-of-middle-c)           ;x-offset\n                        key-width                           ;width\n                        note)]))                            ;note\n             )\n\n        ;black-keys\n        ;(-&gt;&gt; black-notes\n        ;     (map-indexed\n        ;       (fn [index note]\n        ;         [note\n        ;          (let [go (key+ keystation-obj             ;parent\n        ;                         (- (index-of (+ note 1) white-notes)\n        ;                            idx-of-middle-c\n        ;                            0.5)                    ;x-offset\n        ;                         key-width                  ;width\n        ;                         note                       ;note\n        ;                         )]\n        ;            (set! (.. go transform localPosition)\n        ;                  (v3 0 (/ key-width 2) (* 3 key-width)))\n        ;            go)])))\n        ]\n\n    (-&gt;&gt; black-notes\n         (map-indexed\n           (fn [index note]\n             [note\n              (index-of (+ note 1) white-notes)\n              \n              ])))\n    ;white-notes\n    black-notes\n    \n    #_(-&gt;&gt; (concat white-keys black-keys)\n         (flatten)\n         (apply hash-map))\n    )&quot;, :offset 1708, :ns &quot;studio&quot;} {:command &quot;(let [low 21\n        high 108\n        white-notes (notes-in-c-range low high)\n        black-notes (filter #(not (contains? [] %)) (range low (+ 1 high)))\n        idx-of-middle-c (index-of 60 white-notes)\n        key-width (/ 1.225 (count white-notes))\n\n        white-keys\n        (-&gt;&gt; white-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (key+ keystation-obj                      ;parent\n                        (- index idx-of-middle-c)           ;x-offset\n                        key-width                           ;width\n                        note)]))                            ;note\n             )\n\n        ;black-keys\n        ;(-&gt;&gt; black-notes\n        ;     (map-indexed\n        ;       (fn [index note]\n        ;         [note\n        ;          (let [go (key+ keystation-obj             ;parent\n        ;                         (- (index-of (+ note 1) white-notes)\n        ;                            idx-of-middle-c\n        ;                            0.5)                    ;x-offset\n        ;                         key-width                  ;width\n        ;                         note                       ;note\n        ;                         )]\n        ;            (set! (.. go transform localPosition)\n        ;                  (v3 0 (/ key-width 2) (* 3 key-width)))\n        ;            go)])))\n        ]\n\n    (-&gt;&gt; black-notes\n         (map-indexed\n           (fn [index note]\n             [note\n              (index-of (+ note 1) white-notes)\n              \n              ])))\n    ;white-notes\n    black-notes\n    \n    #_(-&gt;&gt; (concat white-keys black-keys)\n         (flatten)\n         (apply hash-map))\n    )&quot;, :offset 1700, :ns &quot;studio&quot;} {:command &quot;notes-in-c&quot;, :offset 10, :ns &quot;studio&quot;} {:command &quot;(contains? notes-in-c 22)&quot;, :offset 25, :ns &quot;studio&quot;} {:command &quot;(contains? notes-in-c-set 22)&quot;, :offset 29, :ns &quot;studio&quot;} {:command &quot;(contains? notes-in-c-set 21)&quot;, :offset 29, :ns &quot;studio&quot;} {:command &quot;(let [low 21\n        high 108\n        white-notes (notes-in-c-range low high)\n        black-notes (filter #(not (contains? notes-in-c-set %)) (range low (+ 1 high)))\n        idx-of-middle-c (index-of 60 white-notes)\n        key-width (/ 1.225 (count white-notes))\n\n        white-keys\n        (-&gt;&gt; white-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (key+ keystation-obj                      ;parent\n                        (- index idx-of-middle-c)           ;x-offset\n                        key-width                           ;width\n                        note)]))                            ;note\n             )\n\n        ;black-keys\n        ;(-&gt;&gt; black-notes\n        ;     (map-indexed\n        ;       (fn [index note]\n        ;         [note\n        ;          (let [go (key+ keystation-obj             ;parent\n        ;                         (- (index-of (+ note 1) white-notes)\n        ;                            idx-of-middle-c\n        ;                            0.5)                    ;x-offset\n        ;                         key-width                  ;width\n        ;                         note                       ;note\n        ;                         )]\n        ;            (set! (.. go transform localPosition)\n        ;                  (v3 0 (/ key-width 2) (* 3 key-width)))\n        ;            go)])))\n        ]\n\n    (-&gt;&gt; black-notes\n         (map-indexed\n           (fn [index note]\n             [note\n              (index-of (+ note 1) white-notes)\n              \n              ])))\n    ;white-notes\n    black-notes\n    \n    #_(-&gt;&gt; (concat white-keys black-keys)\n         (flatten)\n         (apply hash-map))\n    )&quot;, :offset 1712, :ns &quot;studio&quot;} {:command &quot;(let [low 21\n        high 108\n        white-notes (notes-in-c-range low high)\n        black-notes (filter #(not (contains? notes-in-c-set %)) (range low (+ 1 high)))\n        idx-of-middle-c (index-of 60 white-notes)\n        key-width (/ 1.225 (count white-notes))\n\n        white-keys\n        (-&gt;&gt; white-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (key+ keystation-obj                      ;parent\n                        (- index idx-of-middle-c)           ;x-offset\n                        key-width                           ;width\n                        note)]))                            ;note\n             )\n\n        ;black-keys\n        ;(-&gt;&gt; black-notes\n        ;     (map-indexed\n        ;       (fn [index note]\n        ;         [note\n        ;          (let [go (key+ keystation-obj             ;parent\n        ;                         (- (index-of (+ note 1) white-notes)\n        ;                            idx-of-middle-c\n        ;                            0.5)                    ;x-offset\n        ;                         key-width                  ;width\n        ;                         note                       ;note\n        ;                         )]\n        ;            (set! (.. go transform localPosition)\n        ;                  (v3 0 (/ key-width 2) (* 3 key-width)))\n        ;            go)])))\n        ]\n\n    (-&gt;&gt; black-notes\n         (map-indexed\n           (fn [index note]\n             [note\n              (index-of (+ note 1) white-notes)\n              \n              ])))\n    ;white-notes\n    ;black-notes\n    \n    #_(-&gt;&gt; (concat white-keys black-keys)\n         (flatten)\n         (apply hash-map))\n    )&quot;, :offset 1713, :ns &quot;studio&quot;} {:command &quot;(def keystation-keys\n  (let [low 21\n        high 108\n        white-notes (notes-in-c-range low high)\n        black-notes (filter #(not (contains? notes-in-c-set %)) (range low (+ 1 high)))\n        idx-of-middle-c (index-of 60 white-notes)\n        key-width (/ 1.225 (count white-notes))\n\n        white-keys\n        (-&gt;&gt; white-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (key+ keystation-obj                      ;parent\n                        (- index idx-of-middle-c)           ;x-offset\n                        key-width                           ;width\n                        note)]))                            ;note\n             )\n\n        black-keys\n        (-&gt;&gt; black-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (let [go (key+ keystation-obj             ;parent\n                                 (- (index-of (+ note 1) white-notes)\n                                    idx-of-middle-c\n                                    0.5)                    ;x-offset\n                                 key-width                  ;width\n                                 note                       ;note\n                                 )]\n                    (set! (.. go transform localPosition)\n                          (v3 0 (/ key-width 2) (* 3 key-width)))\n                    go)])))\n        ]\n\n    \n    (-&gt;&gt; (concat white-keys black-keys)\n         (flatten)\n         (apply hash-map))\n    ))&quot;, :offset 1514, :ns &quot;studio&quot;} {:command &quot;(let [low 21\n        high 108\n        white-notes (notes-in-c-range low high)\n        black-notes (filter #(not (contains? notes-in-c-set %)) (range low (+ 1 high)))\n        idx-of-middle-c (index-of 60 white-notes)\n        key-width (/ 1.225 (count white-notes))\n\n        white-keys\n        (-&gt;&gt; white-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (key+ keystation-obj                      ;parent\n                        (- index idx-of-middle-c)           ;x-offset\n                        key-width                           ;width\n                        note)]))                            ;note\n             )\n\n        ;black-keys\n        ;(-&gt;&gt; black-notes\n        ;     (map-indexed\n        ;       (fn [index note]\n        ;         [note\n        ;          (let [go (key+ keystation-obj             ;parent\n        ;                         (- (index-of (+ note 1) white-notes)\n        ;                            idx-of-middle-c\n        ;                            0.5)                    ;x-offset\n        ;                         key-width                  ;width\n        ;                         note                       ;note\n        ;                         )]\n        ;            (set! (.. go transform localPosition)\n        ;                  (v3 0 (/ key-width 2) (* 3 key-width)))\n        ;            go)])))\n        ]\n\n    (-&gt;&gt; black-notes\n         (map-indexed\n           (fn [index note]\n             [note\n              (- (index-of (+ note 1) white-notes)\n                 idx-of-middle-c\n                 )\n\n              ])))\n    ;white-notes\n    ;black-notes\n\n    #_(-&gt;&gt; (concat white-keys black-keys)\n         (flatten)\n         (apply hash-map))\n    )&quot;, :offset 1750, :ns &quot;studio&quot;} {:command &quot;(.. (object-named \&quot;Cube\&quot;) transform)&quot;, :offset 36, :ns &quot;studio&quot;} {:command &quot;(.. (object-named \&quot;Cube\&quot;) transform Translate)&quot;, :offset 46, :ns &quot;studio&quot;} {:command &quot;(.. (object-named \&quot;Cube\&quot;) transform.Translate)&quot;, :offset 46, :ns &quot;studio&quot;} {:command &quot;(.. (object-named \&quot;Cube\&quot;) transform translate)&quot;, :offset 46, :ns &quot;studio&quot;} {:command &quot;(.. (object-named \&quot;Cube\&quot;) transform (Translate (v3 0 0 1)))&quot;, :offset 59, :ns &quot;studio&quot;} {:command &quot;(let [low 21\n        high 108\n        white-notes (notes-in-c-range low high)\n        black-notes (filter #(not (contains? notes-in-c-set %)) (range low (+ 1 high)))\n        idx-of-middle-c (index-of 60 white-notes)\n        key-width (/ 1.225 (count white-notes))\n\n        white-keys\n        (-&gt;&gt; white-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (key+ keystation-obj                      ;parent\n                        (- index idx-of-middle-c)           ;x-offset\n                        key-width                           ;width\n                        note)]))                            ;note\n             )\n\n        ;black-keys\n        ;(-&gt;&gt; black-notes\n        ;     (map-indexed\n        ;       (fn [index note]\n        ;         [note\n        ;          (let [go (key+ keystation-obj             ;parent\n        ;                         (- (index-of (+ note 1) white-notes)\n        ;                            idx-of-middle-c\n        ;                            0.5)                    ;x-offset\n        ;                         key-width                  ;width\n        ;                         note                       ;note\n        ;                         )]\n        ;            (set! (.. go transform localPosition)\n        ;                  (v3 0 (/ key-width 2) (* 3 key-width)))\n        ;            go)])))\n        ]\n\n    (-&gt;&gt; black-notes\n         (map-indexed\n           (fn [index note]\n             [note\n              (- (index-of (+ note 1) white-notes)\n                 idx-of-middle-c\n                 0.5\n                 )\n\n              ])))\n    ;white-notes\n    ;black-notes\n\n    #_(-&gt;&gt; (concat white-keys black-keys)\n         (flatten)\n         (apply hash-map))\n    )&quot;, :offset 1771, :ns &quot;studio&quot;} {:command &quot;(Translate (.. (object-named \&quot;Cube\&quot;) transform) (v3 0 0 1))&quot;, :offset 59, :ns &quot;studio&quot;} {:command &quot;(.Translate (.. (object-named \&quot;Cube\&quot;) transform) (v3 0 0 1))&quot;, :offset 60, :ns &quot;studio&quot;} {:command &quot;(.Translate (. (object-named \&quot;Cube\&quot;) transform) (v3 0 0 1))&quot;, :offset 59, :ns &quot;studio&quot;} {:command &quot;(set! (.. (object-named \&quot;Cube\&quot;) transform localPosition)\n      (v3 1 0 (.. (object-named \&quot;Cube\&quot;) transform localPosition z)))&quot;, :offset 125, :ns &quot;studio&quot;} {:command &quot;(set! (.. (object-named \&quot;Cube\&quot;) transform localPosition)\n      (v3 0 0 (.. (object-named \&quot;Cube\&quot;) transform localPosition z)))&quot;, :offset 125, :ns &quot;studio&quot;} {:command &quot;(set! (.. (object-named \&quot;Cube\&quot;) transform localPosition)\n      (v3 2 0 (.. (object-named \&quot;Cube\&quot;) transform localPosition z)))&quot;, :offset 125, :ns &quot;studio&quot;} {:command &quot;(set! (.. (object-named \&quot;Cube\&quot;) transform position)\n      (v3 2 0 (.. (object-named \&quot;Cube\&quot;) transform position z)))&quot;, :offset 115, :ns &quot;studio&quot;} {:command &quot;(set! (.. (object-named \&quot;Cube\&quot;) transform localPosition)\n      (v3 2 0 0))&quot;, :offset 74, :ns &quot;studio&quot;} {:command &quot;(.Translate (.. (object-named \&quot;Cub\&quot;) transform) (v3 0 0 1))&quot;, :offset 59, :ns &quot;studio&quot;} {:command &quot;(.Translate (.. (object-named \&quot;Cub\&quot;) transform) (v3 0 0 -1))&quot;, :offset 60, :ns &quot;studio&quot;} {:command &quot;(.Translate (.. (object-named \&quot;Cub\&quot;) transform) (v3 0 0 -0.1))&quot;, :offset 62, :ns &quot;studio&quot;} {:command &quot;(def keystation-keys\n  (let [low 21\n        high 108\n        white-notes (notes-in-c-range low high)\n        black-notes (filter #(not (contains? notes-in-c-set %)) (range low (+ 1 high)))\n        idx-of-middle-c (index-of 60 white-notes)\n        key-width (/ 1.225 (count white-notes))\n\n        white-keys\n        (-&gt;&gt; white-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (key+ keystation-obj                      ;parent\n                        (- index idx-of-middle-c)           ;x-offset\n                        key-width                           ;width\n                        note)]))                            ;note\n             )\n\n        black-keys\n        (-&gt;&gt; black-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (let [go (key+ keystation-obj             ;parent\n                                 (- (index-of (+ note 1) white-notes)\n                                    idx-of-middle-c\n                                    0.5)                    ;x-offset\n                                 key-width                  ;width\n                                 note                       ;note\n                                 )]\n                    (.Translate (.. go transform) (v3 0 (/ key-width 2) (* 3 key-width)))\n                    go)])))\n        ]\n\n    (-&gt;&gt; (concat white-keys black-keys)\n         (flatten)\n         (apply hash-map))\n    ))&quot;, :offset 1475, :ns &quot;studio&quot;} {:command &quot;(defn- on-keystation-evt [evt index val]\n  (cond (= evt :note)\n        (let [go (keystation-keys index)]\n          (when-not (nil? go)\n            (set! (.. go transform localRotation)\n                  (euler (v3 (if (= val 0) 0 -7) 0 0))))))\n  (log \&quot;got \&quot; evt \&quot; \&quot; index \&quot; \&quot; val))&quot;, :offset 281, :ns &quot;studio&quot;} {:command &quot;(listen :keystation #'on-keystation-evt)&quot;, :offset 40, :ns &quot;studio&quot;} {:command &quot;(def keystation-keys\n  (let [low 21\n        high 108\n        white-notes (notes-in-c-range low high)\n        black-notes (filter #(not (contains? notes-in-c-set %)) (range low (+ 1 high)))\n        idx-of-middle-c (index-of 60 white-notes)\n        key-width (/ 1.225 (count white-notes))\n\n        white-keys\n        (-&gt;&gt; white-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (key+ keystation-obj                      ;parent\n                        (- index idx-of-middle-c)           ;x-offset\n                        key-width                           ;width\n                        note)]))                            ;note\n             )\n\n        black-keys\n        (-&gt;&gt; black-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (let [go (key+ keystation-obj             ;parent\n                                 (- (index-of (+ note 1) white-notes)\n                                    idx-of-middle-c\n                                    0.5)                    ;x-offset\n                                 (* 0.8 key-width)          ;width\n                                 note                       ;note\n                                 )]\n                    (.Translate (.. go transform) (v3 0 (/ key-width 2) (* 3 key-width)))\n                    go)])))\n        ]\n\n    (-&gt;&gt; (concat white-keys black-keys)\n         (flatten)\n         (apply hash-map))\n    ))&quot;, :offset 1475, :ns &quot;studio&quot;} {:command &quot;(def keystation-keys\n  (let [low 21\n        high 108\n        white-notes (notes-in-c-range low high)\n        black-notes (filter #(not (contains? notes-in-c-set %)) (range low (+ 1 high)))\n        idx-of-middle-c (index-of 60 white-notes)\n        key-width (/ 1.225 (count white-notes))\n\n        white-keys\n        (-&gt;&gt; white-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (key+ keystation-obj                      ;parent\n                        (- index idx-of-middle-c)           ;x-offset\n                        key-width                           ;width\n                        note)]))                            ;note\n             )\n\n        black-keys\n        (-&gt;&gt; black-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (let [go (key+ keystation-obj             ;parent\n                                 (- (index-of (+ note 1) white-notes)\n                                    idx-of-middle-c\n                                    0.5)                    ;x-offset\n                                 key-width                  ;width\n                                 note                       ;note\n                                 )]\n                    (.Translate (.. go transform) (v3 0 (/ key-width 2) 0.02))\n                    (set! (..go transform localScale)\n                          (v3 (/ key-width 2) key-width 0.1))\n                    go)])))\n        ]\n\n    (-&gt;&gt; (concat white-keys black-keys)\n         (flatten)\n         (apply hash-map))\n    ))&quot;, :offset 1580, :ns &quot;studio&quot;} {:command &quot;(def keystation-keys\n  (let [low 21\n        high 108\n        white-notes (notes-in-c-range low high)\n        black-notes (filter #(not (contains? notes-in-c-set %)) (range low (+ 1 high)))\n        idx-of-middle-c (index-of 60 white-notes)\n        key-width (/ 1.225 (count white-notes))\n\n        white-keys\n        (-&gt;&gt; white-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (key+ keystation-obj                      ;parent\n                        (- index idx-of-middle-c)           ;x-offset\n                        key-width                           ;width\n                        note)]))                            ;note\n             )\n\n        black-keys\n        (-&gt;&gt; black-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (let [go (key+ keystation-obj             ;parent\n                                 (- (index-of (+ note 1) white-notes)\n                                    idx-of-middle-c\n                                    0.5)                    ;x-offset\n                                 key-width                  ;width\n                                 note                       ;note\n                                 )]\n                    (.Translate (.. go transform) (v3 0 (/ key-width 2) 0.02))\n                    (set! (.. go transform localScale)\n                          (v3 (/ key-width 2) key-width 0.1))\n                    go)])))\n        ]\n\n    (-&gt;&gt; (concat white-keys black-keys)\n         (flatten)\n         (apply hash-map))\n    ))&quot;, :offset 1581, :ns &quot;studio&quot;} {:command &quot;(first (children keystation-obj))&quot;, :offset 33, :ns &quot;studio&quot;} {:command &quot;(def keystation-keys\n  (let [low 21\n        high 108\n        white-notes (notes-in-c-range low high)\n        black-notes (filter #(not (contains? notes-in-c-set %)) (range low (+ 1 high)))\n        idx-of-middle-c (index-of 60 white-notes)\n        key-width (/ 1.225 (count white-notes))\n\n        white-keys\n        (-&gt;&gt; white-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (key+ keystation-obj                      ;parent\n                        (- index idx-of-middle-c)           ;x-offset\n                        key-width                           ;width\n                        note)]))                            ;note\n             )\n\n        black-keys\n        (-&gt;&gt; black-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (let [pivot (key+ keystation-obj             ;parent\n                                 (- (index-of (+ note 1) white-notes)\n                                    idx-of-middle-c\n                                    0.5)                    ;x-offset\n                                 key-width                  ;width\n                                 note                       ;note\n                                 )\n                        key (first (children pivot))]\n                    (.Translate (.. key transform) (v3 0 (/ key-width 2) 0.02))\n                    (set! (.. key transform localScale)\n                          (v3 (/ key-width 2) key-width 0.1))\n                    pivot)])))\n        ]\n    \n    (-&gt;&gt; (concat white-keys black-keys)\n         (flatten)\n         (apply hash-map))\n    ))&quot;, :offset 1646, :ns &quot;studio&quot;} {:command &quot;(defn- on-keystation-evt [evt index val]\n  (cond (= evt :note)\n        (let [go (keystation-keys index)]\n          (when-not (nil? go)\n            (set! (.. go transform localRotation)\n                  (euler (v3 (if (= val 0) 0 -4) 0 0))))))\n  (log \&quot;got \&quot; evt \&quot; \&quot; index \&quot; \&quot; val))&quot;, :offset 281, :ns &quot;studio&quot;} {:command &quot;(ns studio\n  (:use [arcadia.core]\n        [arcadia.introspection]\n        [arcadia.linear]\n        [music-instrument-state :only [get-notes listen]])\n  (:import (UnityEngine GameObject Resources)))&quot;, :offset 197, :ns &quot;studio&quot;} {:command &quot;(def mat (Resources/load \&quot;black-keys\&quot;))&quot;, :offset 39, :ns &quot;studio&quot;} {:command &quot;mat&quot;, :offset 3, :ns &quot;studio&quot;} {:command &quot;(def c (create-primitive :cube))&quot;, :offset 32, :ns &quot;studio&quot;} {:command &quot;(.. c renderer material)&quot;, :offset 24, :ns &quot;studio&quot;} {:command &quot;(ns studio\n  (:use [arcadia.core]\n        [arcadia.introspection]\n        [arcadia.linear]\n        [music-instrument-state :only [get-notes listen]])\n  (:import (UnityEngine GameObject Renderer Resources)))&quot;, :offset 206, :ns &quot;studio&quot;} {:command &quot;Renderer&quot;, :offset 8, :ns &quot;studio&quot;} {:command &quot;(cmpt c Renderer)&quot;, :offset 17, :ns &quot;studio&quot;} {:command &quot;(.. (cmpt c Renderer) material)&quot;, :offset 31, :ns &quot;studio&quot;} {:command &quot;(cast mat Material)&quot;, :offset 19, :ns &quot;studio&quot;} {:command &quot;(def mat (Resources/load \&quot;black-keys\&quot; (type Material)))&quot;, :offset 55, :ns &quot;studio&quot;} {:command &quot;(Resources/load (type-args Material) \&quot;black-keys\&quot;)&quot;, :offset 50, :ns &quot;studio&quot;} {:command &quot;(Resources/load \&quot;black-keys\&quot;)&quot;, :offset 29, :ns &quot;studio&quot;} {:command &quot;(Resources/load \&quot;black-keys\&quot; (type Material))&quot;, :offset 45, :ns &quot;studio&quot;} {:command &quot;(type Material)&quot;, :offset 15, :ns &quot;studio&quot;} {:command &quot;Material&quot;, :offset 8, :ns &quot;studio&quot;} {:command &quot;(Resources/load \&quot;black-keys\&quot; Material)&quot;, :offset 38, :ns &quot;studio&quot;} {:command &quot;(Resources/Load \&quot;black-keys\&quot;)&quot;, :offset 29, :ns &quot;studio&quot;} {:command &quot;(def mat (Resources/Load \&quot;black-keys\&quot;))&quot;, :offset 39, :ns &quot;studio&quot;} {:command &quot;(set! (.. (cmpt c Renderer) material) mat)&quot;, :offset 42, :ns &quot;studio&quot;} {:command &quot;(defn- key+ [parent x-offset w note]\n  (let [pivot (GameObject. (str \&quot;pivot-\&quot; note))\n        key (create-primitive :cube \&quot;key\&quot;)\n        [h d] [0.03 0.155]\n        mat (if (contains? notes-in-c-set note) \n              mat-white\n              mat-black)]\n    (child+ pivot key)\n    (child+ parent pivot)\n    (set! (.. pivot transform localPosition) (v3 (* w x-offset) 0 0))\n    (set! (.. key transform localPosition) (v3 0 0 (- (/ d 2))))\n    (set! (.. key transform localScale) (v3 (* 0.95 w) h d))\n    (set! (.. (cmpt key Renderer) material) mat)\n    pivot))&quot;, :offset 559, :ns &quot;studio&quot;} {:command &quot;(if (contains? notes-in-c-set 60) \n              mat-white\n              mat-black)&quot;, :offset 83, :ns &quot;studio&quot;} {:command &quot;(defn- key+ [parent x-offset w note]\n  (let [pivot (GameObject. (str \&quot;pivot-\&quot; note))\n        key (create-primitive :cube \&quot;key\&quot;)\n        [h d] [0.03 0.155]\n        mat (if (contains? notes-in-c-set note)\n              mat-white\n              mat-black)]\n    (child+ pivot key)\n    (child+ parent pivot)\n    (set! (.. pivot transform localPosition) (v3 (* w x-offset) 0 0))\n    (set! (.. key transform localPosition) (v3 0 0 (- (/ d 2))))\n    (set! (.. key transform localScale) (v3 (* 0.95 w) h d))\n    (set! (.. (cmpt key Renderer) material) mat)\n    pivot))&quot;, :offset 558, :ns &quot;studio&quot;} {:command &quot;(defn- index-of [e coll] (first (keep-indexed #(if (= e %2) %1) coll)))&quot;, :offset 71, :ns &quot;studio&quot;} {:command &quot;(defn- notes-in-c-range [low high]\n  (filter #(and (&gt;= % low) (&lt;= % high)) notes-in-c))&quot;, :offset 87, :ns &quot;studio&quot;} {:command &quot;(defn- keys+ \&quot;creates gameobjects for keys on a keyboard, returns a hashmap of note-&gt;gameobject\&quot;\n  [container-obj low high keyboard-width]\n  (let [white-notes (notes-in-c-range low high)\n        black-notes (filter #(not (contains? notes-in-c-set %)) (range low (+ 1 high)))\n        idx-of-middle-c (index-of 60 white-notes)\n        key-width (/ keyboard-width (count white-notes))\n\n        white-keys\n        (-&gt;&gt; white-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (key+ container-obj                       ;parent\n                        (- index idx-of-middle-c)           ;x-offset\n                        key-width                           ;width\n                        note)]))                            ;note\n             )\n\n        black-keys\n        (-&gt;&gt; black-notes\n             (map-indexed\n               (fn [index note]\n                 [note\n                  (let [pivot (key+ container-obj           ;parent\n                                    (- (index-of (+ note 1) white-notes)\n                                       idx-of-middle-c\n                                       0.5)                 ;x-offset\n                                    key-width               ;width\n                                    note                    ;note\n                                    )\n                        key (first (children pivot))]\n                    (.Translate (.. key transform) (v3 0 (/ key-width 2) 0.02))\n                    (set! (.. key transform localScale)\n                          (v3 (/ key-width 2) key-width 0.1))\n                    pivot)])))\n        ]\n\n    (-&gt;&gt; (concat white-keys black-keys)\n         (flatten)\n         (apply hash-map))\n    ))&quot;, :offset 1743, :ns &quot;studio&quot;} {:command &quot;(def keystation-obj (object-named \&quot;Keystation\&quot;))&quot;, :offset 48, :ns &quot;studio&quot;} {:command &quot;(def a-300-obj (object-named \&quot;A-300\&quot;))&quot;, :offset 38, :ns &quot;studio&quot;} {:command &quot;(def object-state\n  (atom {\n         :keystation {\n                     buttons {}\n                     faders  {}\n                     keys    (keys+ keystation-obj 21 108 1.225)\n                     knobs   {}\n                     }\n         :a-300      {\n                     buttons {}\n                     faders  {}\n                     keys    (keys+ a-300-obj 41 72 0.44)\n                     knobs   {}\n                     }\n         }))&quot;, :offset 447, :ns &quot;studio&quot;} {:command &quot;(def object-state\n  (atom {\n         :keystation {\n                      :buttons {}\n                      :faders  {}\n                      :keys    (keys+ keystation-obj 21 108 1.225)\n                      :knobs   {}\n                      }\n         :a-300      {\n                      :buttons {}\n                      :faders  {}\n                      :keys    (keys+ a-300-obj 41 72 0.44)\n                      :knobs   {}\n                      }\n         }))&quot;, :offset 465, :ns &quot;studio&quot;} {:command &quot;(contains? notes-in-c-set 60)&quot;, :offset 29, :ns &quot;studio&quot;} {:command &quot;(contains? notes-in-c-set 61)&quot;, :offset 29, :ns &quot;studio&quot;} {:command &quot;mat-white&quot;, :offset 9, :ns &quot;studio&quot;} {:command &quot;mat-black&quot;, :offset 9, :ns &quot;studio&quot;} {:command &quot;(defn- on-evt [device-name evt index val]\n  (cond (= evt :note)\n        (let [go (get-in @object-state [device-name :keys index])]\n          (when-not (nil? go)\n            (set! (.. go transform localRotation)\n                  (euler (v3 (if (= val 0) 0 -4) 0 0)))))))&quot;, :offset 270, :ns &quot;studio&quot;} {:command &quot;(defn- on-midi-evt [device-name]\n  (fn [evt index val]\n    (on-evt device-name evt index val)\n    (log \&quot;got \&quot; device-name \&quot; \&quot; evt \&quot; \&quot; index \&quot; \&quot; val)))&quot;, :offset 150, :ns &quot;studio&quot;} {:command &quot;(listen :keystation (on-midi-evt :keystation))&quot;, :offset 46, :ns &quot;studio&quot;} {:command &quot;(listen :a-300 (on-midi-evt :a-300))&quot;, :offset 36, :ns &quot;studio&quot;} {:command &quot;(+ 1 1)&quot;, :offset 7, :ns &quot;studio&quot;} {:command &quot;(ns studio\n  (:use [arcadia.core]\n        [arcadia.introspection]\n        [arcadia.linear]\n        [music-instrument-state :only [get-notes listen]])\n  (:import (UnityEngine GameObject Material Renderer Resources)))&quot;, :offset 215, :ns &quot;studio&quot;} {:command &quot;(def notes-in-c                                             ;TODO: import from music-notation\n  (-&gt;&gt; (cycle [2 2 1 2 2 2 1])\n       (reductions + (- (mod 0 12) 12))\n       (drop-while #(&lt; % 0))\n       (take-while #(&lt; % 128))))&quot;, :offset 226, :ns &quot;studio&quot;} {:command &quot;(count (filter #(and (&gt;= % 21) (&lt;= % 108)) notes-in-c))&quot;, :offset 55, :ns &quot;studio&quot;} {:command &quot;(/ 0.024 0.03)&quot;, :offset 14, :ns &quot;studio&quot;} {:command &quot;(* 0.024 0.8)&quot;, :offset 13, :ns &quot;studio&quot;} {:command &quot;(/ 0.03 0.024)&quot;, :offset 14, :ns &quot;studio&quot;} {:command &quot;(* 1.25 0.024)&quot;, :offset 14, :ns &quot;studio&quot;} {:command &quot;(/ 0.155 0.024)&quot;, :offset 15, :ns &quot;studio&quot;} {:command &quot;(* 6.5 0.024)&quot;, :offset 13, :ns &quot;studio&quot;} {:command &quot;(def notes-in-c-set (set notes-in-c))&quot;, :offset 37, :ns &quot;studio&quot;} {:command &quot;(def mat-black (Resources/Load \&quot;black-keys\&quot;))&quot;, :offset 45, :ns &quot;studio&quot;} {:command &quot;(def mat-white (Resources/Load \&quot;white-keys\&quot;))&quot;, :offset 45, :ns &quot;studio&quot;} {:command &quot;(defn- key+ [parent x-offset w note]\n  (let [pivot (GameObject. (str \&quot;pivot-\&quot; note))\n        key (create-primitive :cube \&quot;key\&quot;)\n        [h d] [(* 1.25 w) (* 6.5 w)]]\n    (child+ pivot key)\n    (child+ parent pivot)\n    (set! (.. pivot transform localPosition) (v3 (* w x-offset) 0 0))\n    (set! (.. key transform localPosition) (v3 0 0 (- (/ d 2))))\n    (set! (.. key transform localScale) (v3 (* 0.95 w) h d))\n    (set! (.. (cmpt key Renderer) material)\n          (if (contains? notes-in-c-set note)\n            mat-white\n            mat-black))\n    pivot))&quot;, :offset 558, :ns &quot;studio&quot;} {:command &quot;(object-named \&quot;GameObject\&quot;)&quot;, :offset 27, :ns &quot;studio&quot;} {:command &quot;(defn- key+ [parent x-offset w note]\n  (let [pivot (GameObject. (str \&quot;pivot-\&quot; note))\n        key (create-primitive :cube \&quot;key\&quot;)\n        [h d] [(* 1.25 w) (* 6.5 w)]\n        mat (if (contains? notes-in-c-set note)\n              mat-white\n              mat-black)]\n    (child+ pivot key)\n    (child+ parent pivot)\n    (set! (.. pivot transform localPosition) (v3 (* w x-offset) 0 0))\n    (set! (.. key transform localPosition) (v3 0 0 (- (/ d 2))))\n    (set! (.. key transform localScale) (v3 (* 0.95 w) h d))\n    (set! (.. (cmpt key Renderer) material)\n          mat)\n    mat))&quot;, :offset 576, :ns &quot;studio&quot;} {:command &quot;(key+ (object-named \&quot;GameObject\&quot;) 0 0.24 60)&quot;, :offset 44, :ns &quot;studio&quot;} {:command &quot;(key+ (object-named \&quot;GameObject\&quot;) 0 0.24 61)&quot;, :offset 44, :ns &quot;studio&quot;} {:command &quot;(defn- key+ [parent x-offset w note]\n  (let [pivot (GameObject. (str \&quot;pivot-\&quot; note))\n        key (create-primitive :cube \&quot;key\&quot;)\n        [h d] [(* 1.25 w) (* 6.5 w)]\n        mat (if (contains? notes-in-c-set note)\n              mat-white\n              mat-black)]\n    (child+ pivot key)\n    (child+ parent pivot)\n    (set! (.. pivot transform localPosition) (v3 (* w x-offset) 0 0))\n    (set! (.. key transform localPosition) (v3 0 0 (- (/ d 2))))\n    (set! (.. key transform localScale) (v3 (* 0.95 w) h d))\n    \n    mat))&quot;, :offset 522, :ns &quot;studio&quot;} {:command &quot;(key+ (object-named \&quot;GameObject\&quot;) 0 0.024 61)&quot;, :offset 45, :ns &quot;studio&quot;}]}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager" selected="Clojure REPL.Connect to Arcadia REPL">
    <configuration default="true" type="#org.jetbrains.idea.devkit.run.PluginConfigurationType" factoryName="Plugin">
      <module name="" />
      <option name="VM_PARAMETERS" value="-Xmx512m -Xms256m -XX:MaxPermSize=250m -ea" />
      <option name="PROGRAM_PARAMETERS" />
      <predefined_log_file id="idea.log" enabled="true" />
      <method />
    </configuration>
    <configuration default="true" type="AndroidRunConfigurationType" factoryName="Android Application">
      <module name="" />
      <option name="DEPLOY" value="true" />
      <option name="ARTIFACT_NAME" value="" />
      <option name="PM_INSTALL_OPTIONS" value="" />
      <option name="ACTIVITY_EXTRA_FLAGS" value="" />
      <option name="MODE" value="default_activity" />
      <option name="TARGET_SELECTION_MODE" value="SHOW_DIALOG" />
      <option name="PREFERRED_AVD" value="" />
      <option name="CLEAR_LOGCAT" value="false" />
      <option name="SHOW_LOGCAT_AUTOMATICALLY" value="true" />
      <option name="SKIP_NOOP_APK_INSTALLATIONS" value="true" />
      <option name="FORCE_STOP_RUNNING_APP" value="true" />
      <option name="USE_LAST_SELECTED_DEVICE" value="false" />
      <option name="PREFERRED_AVD" value="" />
      <option name="DEEP_LINK" value="" />
      <option name="ACTIVITY_CLASS" value="" />
      <method />
    </configuration>
    <configuration default="true" type="AndroidTestRunConfigurationType" factoryName="Android Tests">
      <module name="" />
      <option name="TESTING_TYPE" value="0" />
      <option name="INSTRUMENTATION_RUNNER_CLASS" value="" />
      <option name="METHOD_NAME" value="" />
      <option name="CLASS_NAME" value="" />
      <option name="PACKAGE_NAME" value="" />
      <option name="EXTRA_OPTIONS" value="" />
      <option name="TARGET_SELECTION_MODE" value="SHOW_DIALOG" />
      <option name="PREFERRED_AVD" value="" />
      <option name="CLEAR_LOGCAT" value="false" />
      <option name="SHOW_LOGCAT_AUTOMATICALLY" value="true" />
      <option name="SKIP_NOOP_APK_INSTALLATIONS" value="true" />
      <option name="FORCE_STOP_RUNNING_APP" value="true" />
      <option name="USE_LAST_SELECTED_DEVICE" value="false" />
      <option name="PREFERRED_AVD" value="" />
      <method />
    </configuration>
    <configuration default="true" type="Applet" factoryName="Applet">
      <option name="WIDTH" value="400" />
      <option name="HEIGHT" value="300" />
      <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
      <module />
      <method />
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <option name="MAIN_CLASS_NAME" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="ENABLE_SWING_INSPECTOR" value="false" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <module name="" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local">
      <setting name="replType" value="1" />
      <module name="" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <method />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="0" />
      <module name="" />
      <method />
    </configuration>
    <configuration default="true" type="ClojureScriptRunConfiguration" factoryName="Clojure Script">
      <module name="" />
      <setting name="path" value="" />
      <setting name="namespace" value="" />
      <setting name="useLein" value="false" />
      <setting name="profiles" value="" />
      <setting name="vmparams" value="" />
      <setting name="params" value="" />
      <setting name="workDir" value="" />
      <method />
    </configuration>
    <configuration default="true" type="CucumberJavaRunConfigurationType" factoryName="Cucumber java">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <option name="myFilePath" />
      <option name="GLUE" />
      <option name="myNameFilter" />
      <option name="myGeneratedName" />
      <option name="MAIN_CLASS_NAME" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="WORKING_DIRECTORY" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="ENABLE_SWING_INSPECTOR" value="false" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <module name="" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="GradleRunConfiguration" factoryName="Gradle">
      <ExternalSystemSettings>
        <option name="executionName" />
        <option name="externalProjectPath" />
        <option name="externalSystemIdString" value="GRADLE" />
        <option name="scriptParameters" />
        <option name="taskDescriptions">
          <list />
        </option>
        <option name="taskNames">
          <list />
        </option>
        <option name="vmOptions" />
      </ExternalSystemSettings>
      <method />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="TEST_OBJECT" value="class" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$MODULE_DIR$" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <envs />
      <patterns />
      <method />
    </configuration>
    <configuration default="true" type="JUnitTestDiscovery" factoryName="JUnit Test Discovery" changeList="All">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="TEST_OBJECT" value="class" />
      <option name="VM_PARAMETERS" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <envs />
      <patterns />
      <method />
    </configuration>
    <configuration default="true" type="JarApplication" factoryName="JAR Application">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="Java Scratch" factoryName="Java Scratch">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <option name="SCRATCH_FILE_ID" value="0" />
      <option name="MAIN_CLASS_NAME" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="WORKING_DIRECTORY" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="ENABLE_SWING_INSPECTOR" value="false" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <module name="" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="JetRunConfigurationType" factoryName="Kotlin">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <option name="MAIN_CLASS_NAME" />
      <option name="VM_PARAMETERS" />
      <option name="PROGRAM_PARAMETERS" />
      <option name="WORKING_DIRECTORY" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <module name="ArcadiaPlayground" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType" factoryName="Kotlin script">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <option name="filePath" />
      <option name="vmParameters" />
      <option name="alternativeJrePath" />
      <option name="programParameters" />
      <option name="passParentEnvs" value="true" />
      <option name="workingDirectory" />
      <option name="isAlternativeJrePathEnabled" value="false" />
      <envs />
      <method />
    </configuration>
    <configuration default="true" type="LeiningenRunConfiguration" factoryName="Leiningen">
      <module name="" />
      <setting name="profiles" value="" />
      <setting name="trampoline" value="false" />
      <method />
    </configuration>
    <configuration default="true" type="Remote" factoryName="Remote">
      <option name="USE_SOCKET_TRANSPORT" value="true" />
      <option name="SERVER_MODE" value="false" />
      <option name="SHMEM_ADDRESS" value="javadebug" />
      <option name="HOST" value="localhost" />
      <option name="PORT" value="5005" />
      <method />
    </configuration>
    <configuration default="true" type="TestNG" factoryName="TestNG">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="SUITE_NAME" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="GROUP_NAME" />
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
      <option name="OUTPUT_DIRECTORY" />
      <option name="ANNOTATION_TYPE" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <option name="USE_DEFAULT_REPORTERS" value="false" />
      <option name="PROPERTIES_FILE" />
      <envs />
      <properties />
      <listeners />
      <method />
    </configuration>
    <configuration default="true" type="TestNGTestDiscovery" factoryName="TestNG Test Discovery" changeList="All">
      <extension name="coverage" enabled="false" merge="false" sample_coverage="true" runner="idea" />
      <module name="" />
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="SUITE_NAME" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="GROUP_NAME" />
      <option name="TEST_OBJECT" value="CLASS" />
      <option name="VM_PARAMETERS" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" />
      <option name="OUTPUT_DIRECTORY" />
      <option name="ANNOTATION_TYPE" />
      <option name="ENV_VARIABLES" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <option name="USE_DEFAULT_REPORTERS" value="false" />
      <option name="PROPERTIES_FILE" />
      <envs />
      <properties />
      <listeners />
      <method />
    </configuration>
    <configuration default="false" name="Connect to Arcadia REPL" type="ClojureREPL" factoryName="Remote">
      <setting name="host" value="127.0.0.1" />
      <setting name="port" value="7888" />
      <setting name="replType" value="0" />
      <module name="arcadia.nrepl" />
      <method />
    </configuration>
    <configuration default="false" name="Start Arcadia REPL" type="LeiningenRunConfiguration" factoryName="Leiningen" singleton="true">
      <module name="arcadia.nrepl" />
      <arguments argument="run" />
      <setting name="profiles" value="" />
      <setting name="trampoline" value="false" />
      <method />
    </configuration>
    <list size="2">
      <item index="0" class="java.lang.String" itemvalue="Clojure REPL.Connect to Arcadia REPL" />
      <item index="1" class="java.lang.String" itemvalue="Leiningen.Start Arcadia REPL" />
    </list>
  </component>
  <component name="ShelveChangesManager" show_recycled="false">
    <option name="remove_strategy" value="false" />
  </component>
  <component name="SvnConfiguration">
    <configuration />
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="e5fcc031-efa8-4017-a5f6-6119c991dc38" name="Default" comment="" />
      <changelist id="683ade52-2a0d-4562-9c79-69c2ad9da45a" name="New changelist" comment="" />
      <created>1511890553604</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1511890553604</updated>
      <workItem from="1511890554911" duration="2272000" />
      <workItem from="1511894358039" duration="5332000" />
      <workItem from="1512018925148" duration="5288000" />
      <workItem from="1513088273951" duration="28969000" />
      <workItem from="1517077769052" duration="53343000" />
      <workItem from="1517998215032" duration="600000" />
      <workItem from="1519431410786" duration="8715000" />
      <workItem from="1519493556261" duration="76598000" />
      <workItem from="1520074429665" duration="38842000" />
      <workItem from="1520353859299" duration="28333000" />
      <workItem from="1521327301068" duration="4433000" />
      <workItem from="1521399947370" duration="11391000" />
      <workItem from="1521471562474" duration="10860000" />
      <workItem from="1522032669921" duration="13476000" />
      <workItem from="1522176764161" duration="61263000" />
      <workItem from="1524434674758" duration="12224000" />
      <workItem from="1529466636604" duration="1303000" />
      <workItem from="1529468895971" duration="8161000" />
      <workItem from="1529902633485" duration="888000" />
      <workItem from="1530402595224" duration="4287000" />
      <workItem from="1533671485280" duration="3074000" />
      <workItem from="1537817615153" duration="3818000" />
      <workItem from="1537830182632" duration="5412000" />
      <workItem from="1537882426265" duration="13315000" />
      <workItem from="1537966930539" duration="62000" />
      <workItem from="1537967267765" duration="7399000" />
      <workItem from="1537974895169" duration="603000" />
      <workItem from="1538058206478" duration="5239000" />
    </task>
    <task id="LOCAL-00001" summary="upgrade to latest Unity 2018-2.9f1;&#10;update OVR plugin;&#10;update OSC simpl;&#10;add Arcadia and arcadia.nrepl as submodules;&#10;">
      <created>1537819625210</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1537819625210</updated>
    </task>
    <task id="LOCAL-00002" summary="receive /keystation/notes in music-instrument-state">
      <created>1537846611095</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1537846611096</updated>
    </task>
    <task id="LOCAL-00003" summary="live map keystation white keys">
      <created>1537891349911</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1537891349911</updated>
    </task>
    <task id="LOCAL-00004" summary="calculate key width based on overall width and add gaps between keys">
      <created>1537918808753</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1537918808753</updated>
    </task>
    <option name="localTasksCounter" value="5" />
    <servers />
  </component>
  <component name="TimeTrackingManager">
    <option name="totallyTimeSpent" value="415500000" />
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="ToolWindowManager">
    <frame x="0" y="0" width="1720" height="1400" extended-state="0" />
    <editor active="true" />
    <layout>
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Palette&#9;" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Analysis" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="true" content_ui="tabs" />
      <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="REPL" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.2895349" sideWeight="0.6521429" order="7" side_tool="true" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.44428572" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.2895349" sideWeight="0.34785715" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Leiningen" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32994187" sideWeight="0.4970458" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32916668" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Tool" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.16744186" sideWeight="0.4942857" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="true" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Database" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Image Layers" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32916668" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Theme Preview" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
    </layout>
    <layout-to-restore>
      <window_info id="Palette" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Cvs" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Message" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Commander" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="0" side_tool="false" content_ui="tabs" />
      <window_info id="Event Log" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="true" content_ui="tabs" />
      <window_info id="Maven Projects" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="REPL" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="true" show_stripe_button="true" weight="0.2703125" sideWeight="0.5" order="5" side_tool="true" content_ui="tabs" />
      <window_info id="Leiningen" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Tool" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="Hierarchy" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="2" side_tool="false" content_ui="combo" />
      <window_info id="Database" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="7" side_tool="false" content_ui="tabs" />
      <window_info id="Structure" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Ant Build" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.25" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="UI Designer" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="4" side_tool="false" content_ui="tabs" />
      <window_info id="Debug" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="3" side_tool="false" content_ui="tabs" />
      <window_info id="TODO" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="false" content_ui="tabs" />
      <window_info id="Palette&#9;" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Image Layers" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Capture Analysis" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
      <window_info id="Inspection" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.4" sideWeight="0.5" order="5" side_tool="false" content_ui="tabs" />
      <window_info id="Version Control" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="8" side_tool="false" content_ui="tabs" />
      <window_info id="Run" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32916668" sideWeight="0.5" order="2" side_tool="false" content_ui="tabs" />
      <window_info id="Terminal" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.32916668" sideWeight="0.5" order="9" side_tool="false" content_ui="tabs" />
      <window_info id="Project" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.1703125" sideWeight="0.5" order="0" side_tool="false" content_ui="combo" />
      <window_info id="Find" active="false" anchor="bottom" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="1" side_tool="false" content_ui="tabs" />
      <window_info id="Theme Preview" active="false" anchor="right" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="10" side_tool="false" content_ui="tabs" />
      <window_info id="Favorites" active="false" anchor="left" auto_hide="false" internal_type="DOCKED" type="DOCKED" visible="false" show_stripe_button="true" weight="0.33" sideWeight="0.5" order="6" side_tool="true" content_ui="tabs" />
    </layout-to-restore>
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="1" />
  </component>
  <component name="Vcs.Log.UiProperties">
    <option name="RECENTLY_FILTERED_USER_GROUPS">
      <collection />
    </option>
    <option name="RECENTLY_FILTERED_BRANCH_GROUPS">
      <collection />
    </option>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="VcsManagerConfiguration">
    <ignored-roots>
      <path value="$PROJECT_DIR$/Assets/arcadia.nrepl" />
      <path value="$PROJECT_DIR$/Assets/Arcadia" />
    </ignored-roots>
    <MESSAGE value="upgrade to latest Unity 2018-2.9f1;&#10;update OVR plugin;&#10;update OSC simpl;&#10;add Arcadia and arcadia.nrepl as submodules;&#10;" />
    <MESSAGE value="set arcadia.nrepl revision" />
    <MESSAGE value="receive /keystation/notes in music-instrument-state" />
    <MESSAGE value="live map keystation white keys" />
    <MESSAGE value="calculate key width based on overall width and add gaps between keys" />
    <option name="LAST_COMMIT_MESSAGE" value="calculate key width based on overall width and add gaps between keys" />
    <option name="PRESELECT_EXISTING_CHANGELIST" value="false" />
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <option name="time" value="1" />
    </breakpoint-manager>
    <watches-manager />
  </component>
  <component name="antWorkspaceConfiguration">
    <option name="IS_AUTOSCROLL_TO_SOURCE" value="false" />
    <option name="FILTER_TARGETS" value="false" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/Assets/scheduler.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="476">
          <caret line="28" column="0" selection-start-line="28" selection-start-column="0" selection-end-line="28" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/osc.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="340">
          <caret line="20" column="0" selection-start-line="20" selection-start-column="0" selection-end-line="20" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$APPLICATION_CONFIG_DIR$/scratches/scratch.txt" />
    <entry file="file://$PROJECT_DIR$/Assets/music_live_compose.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="833">
          <caret line="49" column="35" selection-start-line="49" selection-start-column="35" selection-end-line="49" selection-end-column="35" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/arcadia_test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="187">
          <caret line="11" column="0" selection-start-line="11" selection-start-column="0" selection-end-line="11" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/configuration.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="221">
          <caret line="13" column="0" selection-start-line="13" selection-start-column="0" selection-end-line="13" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/arcadia.nrepl/src/arcadia/nrepl.clj" />
    <entry file="file://$PROJECT_DIR$/Assets/ArcadiaWorksheet.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="170">
          <caret line="10" column="2" selection-start-line="10" selection-start-column="2" selection-end-line="10" selection-end-column="2" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/geometry.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/arcadia_test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/ArcadiaWorksheet.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="4522">
          <caret line="266" column="13" selection-start-line="266" selection-start-column="13" selection-end-line="266" selection-end-column="13" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/arcadia_test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/Arcadia/configuration.edn" />
    <entry file="file://$PROJECT_DIR$/Assets/arcadia_test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="0" selection-start-line="0" selection-start-column="0" selection-end-line="0" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/Arcadia/configuration.edn" />
    <entry file="file://$PROJECT_DIR$/Assets/arcadia.nrepl/src/arcadia/nrepl.clj.meta" />
    <entry file="file://$PROJECT_DIR$/Assets/arcadia.nrepl/README.md.meta" />
    <entry file="file://$APPLICATION_CONFIG_DIR$/scratches/scratch.txt" />
    <entry file="file://$PROJECT_DIR$/Assets/configuration.edn">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="221">
          <caret line="13" column="0" selection-start-line="13" selection-start-column="0" selection-end-line="13" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/ArcadiaWorksheet.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="1683">
          <caret line="99" column="7" selection-start-line="99" selection-start-column="1" selection-end-line="99" selection-end-column="7" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/music_glyphs.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="544">
          <caret line="37" column="7" selection-start-line="37" selection-start-column="7" selection-end-line="37" selection-end-column="7" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/OSC simpl/OscIn.cs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-2884">
          <caret line="334" column="38" selection-start-line="334" selection-start-column="38" selection-end-line="334" selection-end-column="38" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/Arcadia/Source/arcadia/linear.clj" />
    <entry file="file://$PROJECT_DIR$/Assets/Arcadia/Source/clojure/core.clj" />
    <entry file="file://$PROJECT_DIR$/Assets/SixenseInput/Scripts/SixenseInput.cs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="357">
          <caret line="204" column="42" selection-start-line="204" selection-start-column="29" selection-end-line="204" selection-end-column="42" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/music_live_compose.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="565">
          <caret line="83" column="50" selection-start-line="83" selection-start-column="50" selection-end-line="83" selection-end-column="50" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/arcadia.nrepl/README.md">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="836">
          <caret line="37" column="0" selection-start-line="37" selection-start-column="0" selection-end-line="37" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/arcadia_test.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="242">
          <caret line="11" column="0" selection-start-line="11" selection-start-column="0" selection-end-line="11" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/Oculus/VR/Scripts/OVRHapticsClip.cs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="880">
          <caret line="55" column="31" selection-start-line="55" selection-start-column="31" selection-end-line="55" selection-end-column="31" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/Oculus/VR/Scripts/OVRManager.cs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="594">
          <caret line="27" column="18" selection-start-line="27" selection-start-column="18" selection-end-line="27" selection-end-column="18" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/Oculus/VR/Scripts/OVRHaptics.cs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="880">
          <caret line="45" column="32" selection-start-line="45" selection-start-column="32" selection-end-line="45" selection-end-column="32" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/haptics.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="814">
          <caret line="37" column="0" selection-start-line="37" selection-start-column="0" selection-end-line="37" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/LeapMotion/Core/Scripts/Hands/CapsuleHand.cs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="132">
          <caret line="108" column="0" selection-start-line="108" selection-start-column="0" selection-end-line="108" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/LeapMotion/Core/Scripts/Hands/HandModel.cs">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="451">
          <caret line="61" column="25" selection-start-line="61" selection-start-column="25" selection-end-line="61" selection-end-column="25" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/.gitignore">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="665">
          <caret line="19" column="11" selection-start-line="19" selection-start-column="11" selection-end-line="19" selection-end-column="11" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/monitors.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="815">
          <caret line="45" column="25" selection-start-line="45" selection-start-column="25" selection-end-line="45" selection-end-column="25" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/arcadia.nrepl/.nrepl-port">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="0">
          <caret line="0" column="4" selection-start-line="0" selection-start-column="4" selection-end-line="0" selection-end-column="4" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/arcadia.nrepl/arcadia.nrepl.iml" />
    <entry file="file://$PROJECT_DIR$/Assets/arcadia.nrepl/src/arcadia/repl/client.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="136">
          <caret line="8" column="17" selection-start-line="8" selection-start-column="17" selection-end-line="8" selection-end-column="17" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/.idea/vcs.xml">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="125">
          <caret line="5" column="10" selection-start-line="5" selection-start-column="10" selection-end-line="5" selection-end-column="10" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/arcadia.nrepl/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="225">
          <caret line="9" column="0" selection-start-line="9" selection-start-column="0" selection-end-line="9" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/theremin.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="850">
          <caret line="34" column="0" selection-start-line="34" selection-start-column="0" selection-end-line="34" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/music_sight_reading.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="-125">
          <caret line="25" column="38" selection-start-line="25" selection-start-column="38" selection-end-line="25" selection-end-column="38" />
          <folding>
            <marker date="1537801494558" expanded="true" signature="16:517" ph="(ns music-sight-reading ...)" />
            <marker date="1537801494558" expanded="true" signature="519:641" ph="(def perf-state ...)" />
            <marker date="1537801494558" expanded="true" signature="644:760" ph="(defn prep-stats-for-exercise ...)" />
            <marker date="1537801494558" expanded="true" signature="762:876" ph="(defn set-stat ...)" />
            <marker date="1537801494558" expanded="true" signature="878:977" ph="(defn get-stat ...)" />
            <marker date="1537801494558" expanded="true" signature="979:1050" ph="(defn save-perf-state ...)" />
            <marker date="1537801494558" expanded="true" signature="1052:1143" ph="(defn load-perf-state ...)" />
            <marker date="1537801494558" expanded="true" signature="1145:1294" ph="(comment ...)" />
            <marker date="1537801494558" expanded="true" signature="1297:1357" ph="(defn game-loop ...)" />
            <marker date="1537801494558" expanded="true" signature="1424:1583" ph="(defn scroll-go ...)" />
            <marker date="1537801494558" expanded="true" signature="1585:1761" ph="(defn set-go-color ...)" />
            <marker date="1537801494558" expanded="true" signature="1763:1915" ph="(defn update-queued ...)" />
            <marker date="1537801494558" expanded="true" signature="1917:2528" ph="(defn update-active ...)" />
            <marker date="1537801494558" expanded="true" signature="2530:3516" ph="(defn queue-event ...)" />
            <marker date="1537801494558" expanded="true" signature="3519:3566" ph="(defn clear ...)" />
            <marker date="1537801494558" expanded="true" signature="3771:5898" ph="(comment ...)" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/arcadia.nrepl/src/arcadia/nrepl.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="262">
          <caret line="35" column="23" selection-start-line="35" selection-start-column="23" selection-end-line="35" selection-end-column="23" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/Arcadia/Source/arcadia/core.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="350">
          <caret line="14" column="16" selection-start-line="14" selection-start-column="16" selection-end-line="14" selection-end-column="16" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/geometry.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="125">
          <caret line="5" column="0" selection-start-line="5" selection-start-column="0" selection-end-line="5" selection-end-column="0" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/scheduler.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="324">
          <caret line="27" column="42" selection-start-line="27" selection-start-column="40" selection-end-line="27" selection-end-column="42" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/music_notation.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="233">
          <caret line="247" column="12" selection-start-line="247" selection-start-column="12" selection-end-line="247" selection-end-column="12" />
          <folding>
            <marker date="1537801494557" expanded="true" signature="8:234" ph="(ns music-notation ...)" />
            <marker date="1537801494557" expanded="true" signature="236:989" ph="(def lexicon ...)" />
            <marker date="1537801494557" expanded="true" signature="1085:1252" ph="(defn- note-&gt;pitch-class-b-bias ...)" />
            <marker date="1537801494557" expanded="true" signature="1254:1422" ph="(defn- note-&gt;pitch-class-##-bias ...)" />
            <marker date="1537801494557" expanded="true" signature="1424:1609" ph="(defn- octave-of-note ...)" />
            <marker date="1537801494557" expanded="true" signature="1611:1832" ph="(defn- notes-in-key ...)" />
            <marker date="1537801494557" expanded="true" signature="1834:1910" ph="(def notes-in-c ...)" />
            <marker date="1537801494557" expanded="true" signature="2006:2362" ph="(defn- pitch-&gt;data ...)" />
            <marker date="1537801494557" expanded="true" signature="2364:2567" ph="(defn- strip-octave ...)" />
            <marker date="1537801494557" expanded="true" signature="2569:2711" ph="(defn- strip-accidental ...)" />
            <marker date="1537801494557" expanded="true" signature="2713:2881" ph="(defn- extract-accidental ...)" />
            <marker date="1537801494557" expanded="true" signature="2887:8037" ph="(def keys-data ...)" />
            <marker date="1537801494557" expanded="true" signature="8040:8168" ph="(defn- spell-note ...)" />
            <marker date="1537801494557" expanded="true" signature="8171:8524" ph="(def natural-pitch-&gt;staff-y ...)" />
            <marker date="1537801494557" expanded="true" signature="8616:8856" ph="(def game-objects ...)" />
            <marker date="1537801494557" expanded="true" signature="8858:9058" ph="(defn- game-objects+ ...)" />
            <marker date="1537801494557" expanded="true" signature="9060:9354" ph="(defn- game-objects- ...)" />
            <marker date="1537801494557" expanded="true" signature="9356:9595" ph="(defn- game-objects-clear ...)" />
            <marker date="1537801494557" expanded="true" signature="9597:10214" ph="(defn- +glyph ...)" />
            <marker date="1537801494557" expanded="true" signature="10556:10651" ph="(defn- +staff ...)" />
            <marker date="1537801494557" expanded="true" signature="10653:11179" ph="(defn- +grand-staff ...)" />
            <marker date="1537801494557" expanded="true" signature="11181:11929" ph="(defn- +keysig ...)" />
            <marker date="1537801494557" expanded="true" signature="11931:11980" ph="(defn- +keysig-treble ...)" />
            <marker date="1537801494557" expanded="true" signature="11982:12031" ph="(defn- +keysig-bass ...)" />
            <marker date="1537801494557" expanded="true" signature="12033:12218" ph="(defn- +keysig-grand ...)" />
            <marker date="1537801494557" expanded="true" signature="12220:12836" ph="(defn- +time-signature ...)" />
            <marker date="1537801494557" expanded="true" signature="12838:12963" ph="(defn +bar ...)" />
            <marker date="1537801494557" expanded="true" signature="12965:13100" ph="(def x0 ...)" />
            <marker date="1537801494557" expanded="true" signature="13102:13202" ph="(defn- +zero-line ...)" />
            <marker date="1537801494557" expanded="true" signature="13204:15237" ph="(defn- +note-raw ...)" />
            <marker date="1537801494557" expanded="true" signature="15239:15340" ph="(def s ...)" />
            <marker date="1537801494557" expanded="true" signature="15393:15995" ph="(defn +note ...)" />
            <marker date="1537801494557" expanded="true" signature="15997:16085" ph="(defn -note ...)" />
            <marker date="1537801494557" expanded="true" signature="16087:16168" ph="(defn clear-notes ...)" />
            <marker date="1537801494557" expanded="true" signature="16171:16329" ph="(defn set-played-notes! ...)" />
            <marker date="1537801494557" expanded="true" signature="16331:16452" ph="(defn set-keysig! ...)" />
            <marker date="1537801494557" expanded="true" signature="16578:16716" ph="(defn set-timesig! ...)" />
            <marker date="1537801494557" expanded="true" signature="16719:16780" ph="(do ...)" />
            <marker date="1537801494557" expanded="true" signature="16782:16993" ph="(comment ...)" />
            <marker date="1537801494557" expanded="true" signature="16996:17169" ph="(comment ...)" />
            <marker date="1537801494557" expanded="true" signature="17171:17785" ph="(comment ...)" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/osc.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="269">
          <caret line="21" column="0" selection-start-line="21" selection-start-column="0" selection-end-line="21" selection-end-column="0" />
          <folding>
            <marker date="1537845615242" expanded="true" signature="0:32" ph="(ns osc ...)" />
            <marker date="1537845615242" expanded="true" signature="198:450" ph="(defn send ...)" />
            <marker date="1537845615242" expanded="true" signature="452:618" ph="(defn listen ...)" />
            <marker date="1537845615242" expanded="true" signature="620:773" ph="(comment ...)" />
          </folding>
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/studio.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="500">
          <caret line="20" column="42" selection-start-line="20" selection-start-column="42" selection-end-line="20" selection-end-column="42" />
          <folding />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/Assets/music_instrument_state.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="25">
          <caret line="16" column="29" selection-start-line="16" selection-start-column="29" selection-end-line="16" selection-end-column="29" />
          <folding />
        </state>
      </provider>
    </entry>
  </component>
  <component name="masterDetails">
    <states>
      <state key="ArtifactsStructureConfigurable.UI">
        <settings>
          <artifact-editor />
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="FacetStructureConfigurable.UI">
        <settings>
          <last-edited>No facets are configured</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="GlobalLibrariesConfigurable.UI">
        <settings>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="JdkListConfigurable.UI">
        <settings>
          <last-edited>1.8</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ModuleStructureConfigurable.UI">
        <settings>
          <last-edited>ArcadiaPlayground</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectJDKs.UI">
        <settings>
          <last-edited>1.7</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ProjectLibrariesConfigurable.UI">
        <settings>
          <last-edited>Leiningen: cider/cider-nrepl:0.14.0</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
      <state key="ScopeChooserConfigurable.UI">
        <settings>
          <last-edited>ArcadiaUnity</last-edited>
          <splitter-proportions>
            <option name="proportions">
              <list>
                <option value="0.2" />
              </list>
            </option>
          </splitter-proportions>
        </settings>
      </state>
    </states>
  </component>
</project>